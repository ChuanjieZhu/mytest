/********************************************************************************
**  Copyright (c) 2012, 深圳市飞瑞斯科技有限公司
**  All rights reserved.
**
**  文件名称： devLib.h
**  参考：外围设备对外头文件
**
**  当前版本：1.0
**
**  创建作者：颜廷军
**  创建日期: 2012-06-18
**
**  修改作者：
**  修改日期:
********************************************************************************/
#ifndef DEVLIB_H
#define DEVLIB_H

#include <stdio.h>
#include <pthread.h>

/* 音频接口函数 */

#include <linux/types.h>
/* 视频接口函数 */
#include <linux/videodev2.h>

//#include "../devOutLib.h"


#ifdef LOG_TESTING
	#define WRITELOG_AMOUNT 1000000
#endif

#ifndef BOOL
#define BOOL int
#endif

#define FACEDETECT_FIND_NO_FACE		-255	/* 检测不到人脸场景时返回的错误码 */

/**************************************************************\
** 函数名称： AudioInit
** 功能： 音频初始化
** 参数：  
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void AudioInit();

/**************************************************************\
** 函数名称： AudioUninit
** 功能： 音频反初始化
** 参数：  
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void AudioUninit();

/**************************************************************\
** 函数名称： AudioGetVolume
** 功能： 获取音量
** 参数：  无
		   
** 返回： 音量值
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
int AudioGetVolume();

/**************************************************************\
** 函数名称： AudioSetMicVolume
** 功能： 设置麦音量
** 参数：  音量
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void AudioSetMicVolume(int nVolume);

/**************************************************************\
** 函数名称： AudioGetMicVolume
** 功能： 获取麦音量
** 参数：  
		   
** 返回：  麦音量
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
int AudioGetMicVolume();

/**************************************************************\
** 函数名称： AudioMute
** 功能： 关闭混音器
** 参数： 如果bMute大于或为真就是关闭混音器
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void AudioMute(int bMute=1);

/**************************************************************\
** 函数名称： AudioPlay
** 功能： 播放数据
** 参数： pAudioData-播放的数据, nDataLen-播放的数据长度, bAppend--附加，如果为0，那么m_nDataLen就为0
** 返回： 无
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void AudioPlay(char* pAudioData, int nDataLen, int bAppend=1);

/**************************************************************\
** 函数名称： AudioPlayFile
** 功能： 播放文件
** 参数： pFile-播放的文件, bAppend--附加，如果为0证明之前有打开，应该close和munmap后才用，否则有内存泄露
** 返回： 无
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void AudioPlayFile(char* pFile, int bAppend=1);


/**************************************************************\
** 函数名称： AudioStopVoice
** 功能： 停止播放
** 参数： 
** 返回： 无
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void AudioStopVoice();


/**************************************************************\
** 函数名称： VideoDispLock
** 功能： 锁定视频播放
** 参数： 
** 返回： 无
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void VideoDispLock();


/**************************************************************\
** 函数名称： VideoDispUnLock
** 功能： 解锁视频播放
** 参数： 
** 返回： 无
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void VideoDispUnLock();

/**************************************************************\
** 函数名称： VideoGetHandle
** 功能： 获取视频句柄
** 参数： 
** 返回： 视频句柄
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
int VideoGetHandle();


/**************************************************************\
** 函数名称： TouchSet_Height
** 功能： 设置触摸高度
** 参数： 触摸高度
** 返回： 
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void TouchSet_Height(int height);


/**************************************************************\
** 函数名称： TouchGet_Flip
** 功能： 设置触摸高度
** 参数： 触摸高度
** 返回： 
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
int TouchGet_Flip();


/**************************************************************\
** 函数名称： TouchSet_Flip
** 功能： 设置触摸高度
** 参数： 触摸高度
** 返回： 
		   
** 返回：  
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void TouchSet_Flip(int flip);


typedef struct gpio_general 
{
	unsigned char port;
	unsigned char val;
} gpio_general;

typedef struct __device_attr
{
	int iRecordNum;					/* 记录数量 */
	char cCard;						/* 内置读卡器 0-不支持 1-ID卡/IC卡 */
	char cIOOut;					/* 简易开关量 0-不支持 1-支持 */
	char cWiegandCtrl;				/* 韦根控制器 0-不支持 1-支持 */
	char cRS485Ctrl;				/* RS485控制器 0-不支持 1-支持 */
	char cSD;						/* SD卡 0-不支持 1-支持 */
	char cRecordPic;				/* 识别照片 0-本地不存储 1-存储 */
	char cIO;						/* IO 0-不支持 1-支持 */
	char cRS485;					/* RS485 0-不支持 1-支持 */
	char cWiegandOut;				/* 韦根输出 0-不支持 1-支持 */
	char cWiegandIn;				/* 韦根输入 0-不支持 1-支持 */
	char cRS232;					/* RS232 0-不支持 1-支持 */
	char cWifi;						/* WIFI 0-不支持 1-支持 */
	char c3G;						/* 3G 0-不支持 1-支持 */
	char cFaceMonitor;				/* FaceMonitor 0-不支持 1-支持 */
	char cAlarm;					/* 定时响铃 0-不支持 1-支持 */
	char cBell;						/* 门铃 0-不支持 1-支持 */
	char cNetworking;				/* 联网同步功能 0-不支持 1-支持 */
}device_attr_t;

#define _MAX_DOOR	         6

#define GPIO_2451_DEV  		"/dev/ioex"
#define GPIO_6441_DEV  		"/dev/misc_io"
#define EXTGPIO_DEV 	"/dev/pcf8574"

#define GPIO_CMD_GET	_IOR('M', 110, gpio_general)
#define GPIO_CMD_SET	_IOW('M', 111, gpio_general)
#define GPIO_CMD_DIR	_IOW('M', 112, gpio_general)

#define GET_DM644x_EXIO_VAL	 _IOR('M', 113, gpio_general)
#define SET_DM644x_EXIO_VAL	 _IOW('M', 114, gpio_general)

/* 外围IO定义 */
/* Z系列与L系列共同的IO */
#define _IO_LED_RED         0   /* 输出IO，状态指示灯，红灯 */
#define _IO_LED_GREEN       1   /* 输出IO，绿灯,used for back light */
//#define _IO_INPUT0          2   /* 输入IO，外部输入0 */
//#define _IO_OUTPUT0         3   /* 输出IO，继电器0 */
#define _IO_PROTECT         4   /* 输入IO，防拆开关 */
#define _IO_IR_LIGHT        5   /* 输出IO，灯板 */
#define _IO_BLACK_LIGHT     6   /* 输出IO，背光 */
#define _IO_BEEP            7   /* 输出IO，蜂鸣器 */

/* L系列专有的IO */
//#define _IO_INPUT1          8   /* 输入IO，外部输入1 */
//#define _IO_OUTPUT1         9   /* 输出IO，继电器1 */

/* L系列实际CPU自身IO值定义 */
#define E5_CPU_IO_IRD_LED 	8

/* L系列实际扩展IO值定义 */
#define E5_EXIO_GRE_LED		0  /* 输出 */
#define E5_EXIO_RED_LED		1  /* 输出 */
#define E5_EXIO_OUT0	    4  /* 输出 */
#define E5_EXIO_OUT1	    5  /* 输出 */
#define E5_EXIO_BUZZ		6  /* 输出 */

#define E5_EXIO_IN0	        7  /* 输入 */
#define E5_EXIO_IN1	        8  /* 输入 */
#define E5_EXIO_PROTECT		11 /* 输入 */

#define IO_OFF      0
#define IO_ON       1

#define _KEYBOARD_BUFLEN	128
#define _SLEEP_TIMEOUT		120 // 2 minutes
#define _SHORT_TIMEOUT		10 // 5 seconds
#define _DEEPSLEEP_TIMEOUT	120 // 2 minutes

/* E205 IO值定义 */
#define E205_IO_IR_LIGHT 1	/* 红外灯 */
#define E205_IO_BEEP     38 /* 输出IO，蜂鸣器 */

/**************************************************************\
** 函数名称： SetGpio
** 功能： 设置CPU自身的IO值函数
** 参数： iIoIndex  : IO序号
		  iValue    : 值
** 返回： 0-成功，其它-失败
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
int SetGpio(int iIoIndex, int iValue);


/* 韦根输入接口函数 */

/**************************************************************\
** 函数名称： SetWiegandCardVal
** 功能： 设置韦根卡号
** 参数： iCardVal : 卡号
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void SetWiegandCardVal(int iCardVal);

/**************************************************************\
** 函数名称： GetWiegandCardVal
** 功能： 获取韦根卡号
** 参数： 无
** 返回： 韦根输入卡号
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
int GetWiegandCardVal();

/**************************************************************\
** 函数名称： ReadWiegandThread
** 功能： 读韦根输入数据线程
** 参数： 对象
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void * ReadWiegandThread(void *arg);


/* 韦根输出接口函数 */

/**************************************************************\
** 函数名称： SetWiegandOutBuf
** 功能： 设置韦根输出数据的内容
** 参数： pWgOutBuf : 韦根输出数据的指针
		  iWgOutBufLen : 韦根输出数据的长度
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void SetWiegandOutBuf(char * pWgOutBuf, int iWgOutBufLen);

/**************************************************************\
** 函数名称： GetWiegandOutBuf
** 功能： 获取韦根输出数据的内容
** 参数： pWgOutBuf : 返回韦根输出数据的指针
** 返回： 是否有韦根输出数据的长度(字节数)
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
int GetWiegandOutBuf(char * pWgOutBuf);

/**************************************************************\
** 函数名称： SetWiegandOutType
** 功能： 设置韦根输出类型: 0-韦根26; 1-韦根34
** 参数： iType:  0-韦根26; 1-韦根34
** 返回： 0 - 成功; -1 失败
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
int SetWiegandOutType(int iType);

/**************************************************************\
** 函数名称： GetWiegandOutBuf
** 功能： 获取韦根输出的类型
** 参数： 无
** 返回： 0 - 韦根26，1 - 韦根34, -1 获取失败
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
int GetWiegandOutType();

/**************************************************************\
** 函数名称： ReadWiegandThread
** 功能： 读韦根输入数据线程
** 参数： 对象
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void * WriteWiegandThread(void *arg);


/* 标准键盘接口函数 */

/**************************************************************\
** 函数名称： ReadStandardKeyboardThread
** 功能： 读标准键盘输入数据线程
** 参数： 对象
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void * ReadStandardKeyboardThread(void *arg);


/* 设备键盘接口函数 */

/**************************************************************\
** 函数名称： ReadDeviceKeyboardThread
** 功能： 读设备键盘输入数据线程
** 参数： 对象
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void * ReadDeviceKeyboardThread(void *arg);


/* 触摸屏接口函数 */

/**************************************************************\
** 函数名称： SetTouchPadCalibrating
** 功能： 设置触摸屏是否处在校准模式
** 参数： iValue : 0-非校准模式，1-校准模式
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void SetTouchPadCalibrating(int iValue);

/**************************************************************\
** 函数名称： ReadTouchPadThread
** 功能： 读触摸屏输入数据线程
** 参数： 对象
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void * ReadTouchPadThread(void *arg);


/* 间断IO接口函数 */

/**************************************************************\
** 函数名称： DealIntervalOutputIo
** 功能： 间断输出IO响应处理函数
** 参数： iIoType : IO序号
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void DealIntervalOutputIo(int iIoType);

/**************************************************************\
** 函数名称： IntervalOutputIoThread
** 功能： 间断输出IO设置线程
** 参数： 对象
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void * IntervalOutputIoThread(void *arg);

/**************************************************************\
** 函数名称： Beep
** 功能： 蜂鸣器播放函数
** 参数： nCount：蜂鸣次数
	  nDelayOn：蜂鸣时间，单位毫秒
	  nDelayOff：蜂鸣延迟时间，单位毫秒
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void Beep(int nCount=1, int nDelayOn=100, int nDelayOff=900);


/* 通用IO接口函数 */

/**************************************************************\
** 函数名称： IoInit
** 功能： 打开IO设备
** 参数： 无
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void IoInit();

/**************************************************************\
** 函数名称： IoUnInit
** 功能： 关闭IO设备
** 参数： 无
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void IoUnInit();


/* DM2016芯片接口 */

/**************************************************************\
** 函数名称： DM2016_Authentication
** 功能： DM2016鉴权函数
** 参数： pEncryptedCode : 加密码内容
  		  pPlanCode		 : 解密后的结果
** 返回： 0-成功，其它-失败
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
int DM2016_Authentication(char* pEncryptedCode, char* pPlanCode);

/**************************************************************\
** 函数名称： DM2016_ReadEeprom
** 功能： DM2016读E2PROM
** 参数： offset   : 偏移地址
		  pInData  : 数据内容
		  nDataLen : 数据长度
** 返回： 0-成功，其它-失败
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
int DM2016_ReadEeprom(int offset, char* pOutBuf, int nRequestLen);

/**************************************************************\
** 函数名称： DM2016_WriteEeprom
** 功能： DM2016写E2PROM
** 参数： offset   : 偏移地址
		  pInData  : 数据内容
		  nDataLen : 数据长度
** 返回： 0-成功，其它-失败
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
int DM2016_WriteEeprom(int offset, char* pInData, int nDataLen);


#ifndef HANDLE
#define HANDLE int
#endif

#ifndef INVALID_HANDLE_VALUE
#define INVALID_HANDLE_VALUE -1
#endif

#ifndef QSIF_WIDTH
#define QSIF_WIDTH      160
#define QSIF_HEIGHT     120
#endif


#ifndef SIF_WIDTH
#define SIF_WIDTH       320
#define SIF_HEIGHT      240
#endif

#ifndef VGA_WIDTH
#define VGA_WIDTH       640
#define VGA_HEIGHT      480
#endif

#ifndef D1_WIDTH
#define D1_WIDTH 704
#define D1_HEIGHT 576
#endif

#ifndef CIF_WIDTH
#define CIF_WIDTH (D1_WIDTH/2)
#define CIF_HEIGHT (D1_HEIGHT/2)
#endif

#ifndef QCIF_WIDTH
#define QCIF_WIDTH (CIF_WIDTH/2)
#define QCIF_HEIGHT (CIF_HEIGHT/2)
#endif

#ifdef __cplusplus
extern "C" {
#endif


/* Open and initialize video capture device */
/**************************************************************\
** 函数名称： VideoOpen
** 功能： 打开和初始化音频设备
** 参数： bMultiChannel   : -设备系列
		  		width  : -宽度
		  		height  : -高度
** 返回： 失败返回-1；成功返回LPVIDEO结构体
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
HANDLE VideoOpen(int bMultiChannel, int width, int height);


/* Close device and release memory */
/**************************************************************\
** 函数名称： VideoClose
** 功能： 关闭视频
** 参数： hVideo-结构体
** 返回： 无
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
void VideoClose(HANDLE hVideo);


/* select channel */
/**************************************************************\
** 函数名称： VideoSelectChannel
** 功能： 视频选择通道
** 参数： hVideo: 视频结构体，nChannel：通道号
** 返回： 
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoSelectChannel(HANDLE hVideo, int nChannel);

/**************************************************************\
** 函数名称： VideoSwitchOnTwoCamera
** 功能： 两个Camera开关
** 参数： hVideo-结构体
** 返回： 0: 成功; 1: 失败
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoSwitchOnTwoCamera(HANDLE hVideo);

/**************************************************************\
** 函数名称： VideoMirror
** 功能： 视频镜像
** 参数： hVideo HANDLE结构体, nChnl:相机序号
** 返回： 0：成功，-1：失败
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoMirror(HANDLE hVideo, int nChnl=0);

/**************************************************************\
** 函数名称： VideoFlip
** 功能： 镜头倒装，Y方向镜像
** 参数： hVideo-结构体, nChnl-所选的镜头
** 返回： 0--成功；-1--失败
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoFlip(HANDLE hVideo, int nChnl=0);

/**************************************************************\
** 函数名称： VideoGetFrame
** 功能： 获得视频
** 参数： hVideo-结构体, 3
					pnType: 0-D1_YUV422 
								 1-SIF_Y 
								 2-VGA_Y
								 3-SIF_RGB565
					pFrameBuffer：取出视频图像指针
** 返回： 取出视频图像指针
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
void* VideoGetFrame(HANDLE hVideo, int* pnType=NULL, void* pFrameBuffer=NULL);

/**************************************************************\
** 函数名称： VideoSetBright
** 功能： 设置亮度
** 参数： hVideo-结构体,nChl-哪个相机, nVal-设置的值
** 返回： 无
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
void VideoSetBright(HANDLE hVideo, int nChl, int nVal);

/**************************************************************\
** 函数名称： VideoSetContrast
** 功能： 设置相机对比度
** 参数： hVideo-结构体,nChl-哪个相机,nVal-设置的值
** 返回： 无
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
void VideoSetContrast(HANDLE hVideo, int nChl, int nVal);

/**************************************************************\
** 函数名称： VideoSetHue
** 功能： 设置相机色调
** 参数： hVideo-结构体,nChl-哪个相机,nVal-设置的值
** 返回： 无
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
void VideoSetHue(HANDLE hVideo, int nChl, int nVal);

/**************************************************************\
** 函数名称： VideoSetSaturation
** 功能： 设置相机的饱和度
** 参数： hVideo-结构体,nChl-哪个相机,nVal-设置的值
** 返回： 无
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
void VideoSetSaturation(HANDLE hVideo, int nChl, int nVal);

/**************************************************************\
** 函数名称： VideoSetExposure
** 功能： 获得视频曝光度
** 参数： hVideo-结构体,nChl-哪个相机,nVal-设置的值
** 返回： 无
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
void VideoSetExposure(HANDLE hVideo, int nChl, int nVal);

/**************************************************************\
** 函数名称： VideoHwReset
** 功能： 摄像机重启
** 参数： hVideo-结构体
** 返回： 无
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
void VideoHwReset(HANDLE hVideo);

/**************************************************************\
** 函数名称： VideoGetBright
** 功能： 获得视频亮度
** 参数： hVideo-结构体,nChl-哪个相机
** 返回： 返回获得的值
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoGetBright(HANDLE hVideo, int nChl);

/**************************************************************\
** 函数名称： VideoGetContrast
** 功能： 获得相机对比度
** 参数： hVideo-结构体,nChl-哪个相机
** 返回： 返回获得的值
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoGetContrast(HANDLE hVideo, int nChl);

/**************************************************************\
** 函数名称： VideoGetHue
** 功能： 获得相机色调
** 参数： hVideo-结构体,nChl-哪个相机
** 返回： 返回获得的值
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoGetHue(HANDLE hVideo, int nChl);

/**************************************************************\
** 函数名称： VideoGetSaturation
** 功能： 获得相机的饱和度
** 参数： hVideo-结构体,nChl-哪个相机
** 返回： 返回获得的值
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoGetSaturation(HANDLE hVideo, int nChl);

/**************************************************************\
** 函数名称： VideoGetExposure
** 功能： 获得视频曝光度
** 参数： hVideo-结构体,nChl-哪个相机
** 返回： 返回获得的值
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoGetExposure(HANDLE hVideo, int nChl);

/**************************************************************\
** 函数名称： VideoGetReg
** 功能： 获得视频寄存器参数
** 参数： hVideo-结构体,nChl-哪个相机,nReg-寄存器地址
** 返回： 返回获得的值
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoGetReg(HANDLE hVideo, int nChl, int nReg);

/**************************************************************\
** 函数名称： VideoSetReg
** 功能： 设置视频寄存器参数
** 参数： hVideo-结构体,nChl-哪个相机,nReg-寄存器地址,nVal-设置的值
** 返回： 无
** 创建作者：
** 创建日期：
** 修改作者： 张祖异
** 修改日期： 2012.5.21
***************************************************************/
int VideoSetReg(HANDLE hVideo, int nChl, int nReg, int nVal);

#ifdef __cplusplus
}
#endif


#ifdef __cplusplus
extern "C" {
#endif

/**************************************************************\
** 函数名称： SetVideoStatus
** 功能： 设置是否使能视频
** 参数： iValue : 是否使能，0-关闭，1-打开
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者： 
** 修改日期： 
\**************************************************************/
void SetVideoStatus(int iValue);

/**************************************************************\
** 函数名称： SetVideoDisplayStatus
** 功能： 设置是否显示视频
** 参数： iValue : 是否显示，0-不显示，1-显示
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者： 
** 修改日期： 
\**************************************************************/
void SetVideoDisplayStatus(int iValue);

/**************************************************************\
** 函数名称： GetVideoDisplayStatus
** 功能： 获取视频显示线程的显示状态
** 参数： 无
** 返回： TRUE-有显示，FALSE-无显示
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者： 
** 修改日期： 
\**************************************************************/
BOOL GetVideoDisplayStatus();

/**************************************************************\
** 函数名称： VideoDisplayThread
** 功能： 视频显示线程
** 参数： pArgs 线程参数，当前为NULL
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者： 
** 修改日期： 
\**************************************************************/
void* VideoDisplayThread(void* pArgs);

/* 232接口读卡功能 */

/**************************************************************\
** 函数名称： SetCardVal
** 功能： 设置卡号
** 参数： iCardVal : 卡号
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void SetCardVal(unsigned int iCardVal);



/**************************************************************\
** 函数名称： SetCpuCardHandle
** 功能：  读写M1卡的串口句柄，-1表示没有圆志科信读头，其它为存在圆志科信读头 
** 参数： iCardhandle : 卡句柄
** 返回： 无
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
void SetCpuCardHandle(int iCardhandle);
 

/**************************************************************\
** 函数名称： GetCpuCardHandlel
** 功能： 获取卡句柄 
** 参数： 无
** 返回： 卡号
** 创建作者： 刘宏
** 创建日期： 2012-10-10
** 修改作者：
** 修改日期：
\**************************************************************/
 int GetCpuCardHandle();

/**************************************************************\
** 函数名称： Rs232Thread
** 功能： 232接口读卡线程
** 参数： 对象
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void * Rs232Thread(void *arg);

/**************************************************************\
** 函数名称： ReadCardThread
** 功能： CPU卡读卡线程
** 参数： 对象
** 返回： 无
** 创建作者： 
** 创建日期： 
** 修改作者：
** 修改日期：
\**************************************************************/
void* ReadCardThread(void* pArg);


/* 485接口功能 */

/**************************************************************\
** 函数名称： Rs485Thread
** 功能： 485接口线程
** 参数： 对象
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void * Rs485Thread(void *arg);

int OpenDoor(int nDoor, int nUserId, int nUserType, int nTime);

/**************************************************************\
** 函数名称： ZoomYuv420p
** 功能： 缩放YUV420
** 参数： pDest：缩放后目标存储地址
					nNewWidth：需要缩放的宽度
					nNewHeight：需要缩放的高度
					pSource：源图像地址
					nSrcWidth： 原宽度
					nSrcHeight：原高度
					bUV：是否缩放
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void ZoomYuv420p(void* pDest, int nNewWidth, int nNewHeight, void* pSource, int nSrcWidth, int nSrcHeight, int bUV);

/**************************************************************\
** 函数名称： VideoEnable
** 功能： 摄像头使能
** 参数： bOpenLed  是否开启红外灯，0-不开，1-开
** 返回： 无
** 创建作者： 
** 创建日期： 2012-07-09
** 修改作者：
** 修改日期：
\**************************************************************/
void VideoEnable(int iOpenLed);


/**************************************************************\
** 函数名称： Wav2G711File
** 功能： 音频文件转换
** 参数： pWavFile  输入文件路径 pG711File 输出文件路径
** 返回： 无
** 创建作者： 
** 创建日期： 2012-07-11
** 修改作者：
** 修改日期：
\**************************************************************/
int Wav2G711File(char* pWavFile, char* pG711File);

/**************************************************************\
** 函数名称： ZoomRGB16
** 功能： 缩放RGB16
** 参数： pDest：缩放后目标存储地址
					nNewWidth：需要缩放的宽度
					nNewHeight：需要缩放的高度
					pSource：源图像地址
					nSrcWidth： 原宽度
					nSrcHeight：原高度
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void ZoomRGB16(void* pDest, int nNewWidth, int nNewHeight, void* pSource, int nSrcWidth, int nSrcHeight);


/**************************************************************\
** 函数名称： rotate90_yuv420p
** 功能： YUV420P图像旋转90度
** 参数： pYuv420：原图像地址指针
		  nWidth：原宽度
		  nHeightt：原高度
		  pOutYuv420：旋转后的图像指针地址
		  bUV：是否压缩
		  nDirect：1 ---顺时针； 0 ---逆时针
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void* rotate90_yuv420p(void* pYuv420, int nWidth, int nHeight, void*pOutYuv420, BOOL bUV, int nDirect);


/**************************************************************\
** 函数名称： rotate90_rgb565
** 功能： RGB565图像旋转90度
** 参数： pRgb565：原图像地址指针
					nWidth：原宽度
					nHeightt：原高度
					pOutRgb565：旋转后的图像指针地址
					nDirect：1 ---顺时针； 0 ---逆时针
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void* rotate90_rgb565(void* pRgb565, int nWidth, int nHeight, void* pOutRgb565, int nDirect );

/**************************************************************\
** 函数名称： rotate90_rgb565
** 功能： 获取YUV420P图像
** 参数： nChnl：相机序号 0：黑白相机，1：彩色相机
					pSifBuf：获取图像指针
					bGetForDisp：是否显示
** 返回： 0： 成功;
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
int SysGetVideoBufYUV420P(int nChnl, char* pSifBuf, BOOL bGetForDisp);


/**************************************************************\
** 函数名称： VideoDisable
** 功能： 设置视频不可用
** 参数： bCloseLed：1：视频不可用
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void VideoDisable(BOOL bCloseLed);


/**************************************************************\
** 函数名称： dealIoInputFunction
** 功能： 门磁输入检测函数
** 参数： 无
** 返回： 无
** 创建作者： 颜廷军
** 创建日期： 2012-06-18
** 修改作者：
** 修改日期：
\**************************************************************/
void dealIoInputFunction();





#ifndef __FACTORY_H__
#define __FACTORY_H__

//消息标识 4 bytes
#define 	FACTORY_MSG_MARK	0xFE01A5DE	
#define 	MAX_PACK_SIZE		(10*1024)

#define 	FACTORY_PORT		5151

#define		MSG_FACTORY_TYPE_CONFIGURE	0x01	

#define		MSG_FACTORY_SET_MAC				0x8000
#define		MSG_FACTORY_SET_MAC_RES			0x8001
#define		MSG_FACTORY_SET_SN				0x8002
#define		MSG_FACTORY_SET_SN_RES			0x8003
#define		MSG_FACTORY_SET_CVSCONFIG		0x8004
#define		MSG_FACTORY_SET_CVSCONFIG_RES	0x8005


/* ARP */
#define 	ETH_HW_ADDR_LEN 			6 
#define 	IP_ADDR_LEN 				4 
#define 	ARP_FRAME_TYPE 				0x0806 
#define 	ETHER_HW_TYPE 				1 
#define 	IP_PROTO_TYPE 				0x0800 
#define 	OP_ARP_REQUEST 				2 

#define PACK_ALIGN __attribute__((packed))

typedef struct FirsPackHead
{
	unsigned int	msgFlag;	// 消息标识
	unsigned char	msgType;	// 消息类型
	unsigned short	packSn;		// 包序号
	unsigned int	packType;	// 包类型
	unsigned char	subType;	// 子类型
	unsigned short	len;		// 数据长度
} PACK_ALIGN FACTORY_PACK_HEAD;

/* Arp数据包 */
typedef struct ArpPacket 
{ 
	unsigned char dsthwaddr[ETH_HW_ADDR_LEN]; 
	unsigned char srchwaddr[ETH_HW_ADDR_LEN]; 
	unsigned short frametype; 
	unsigned short hwtype; 
	unsigned short prottype; 
	unsigned char hwaddrsize; 
	unsigned char protaddrsize; 
	unsigned short op; 
	unsigned char sndrhwaddr[ETH_HW_ADDR_LEN]; 
	unsigned char sndripaddr[IP_ADDR_LEN]; 
	unsigned char rcpthwaddr[ETH_HW_ADDR_LEN]; 
	unsigned char rcptipaddr[IP_ADDR_LEN]; 
	unsigned char padding[18]; 
} PACK_ALIGN ARP_PACKET;

typedef struct _FactoryMsg_
{
	FACTORY_PACK_HEAD head;
	char data[1];
}PACK_ALIGN FACTORY_MSG_ST;

typedef struct _FactorySetMAC_
{
	char mac[20] ;//00:0C:29:50:C8:8E
}FACTORY_SET_MAC_ST;

typedef struct _FactorySetSN_
{
	char sn[64] ;//序列号
}FACTORY_SET_SN_ST;

#undef PACK_ALIGN

/*****************************************************************************
 函 数 名  : SendArpPack
 功能描述  : 广播arp应答包，让局域网内主机更新arp缓存表
 输入参数  : char* pIfName  网络接口名称       
             char *srcIp    终端设备ip地址        
             char *srcMac 	终端设备mac地址
             char *dstIp   	应答的目的主机ip地址(255.255.255.255广播地址)        
             char *dstMac  	应答的目的主机mac地址(FF:FF:FF:FF:FF:FF广播地址)
 输出参数  : 无
 返 回 值  : 0:成功 -1:失败
*****************************************************************************/
int SendArpPack(char *pIfName, char *srcIp, char *srcMac, char *dstIp, char *dstMac);


/******************************************************************************
 * 函数名称： FactoryThread
 * 功能： 设置MAC地址和序列号线程
 * 参数： pArgs：对象
 * 返回： 无
 * 创建作者： Jason
 * 创建日期： 2012-10-15
 * 修改作者：
 * 修改日期：
 ******************************************************************************/
void *FactoryThread(void *arg);

/******************************************************************************
 * 函数名称： udpThread
 * 功能： 实时视频流无压缩通过udp输出和对摄像头参数的读取与设置线程
 * 参数： pArgs：对象
 * 返回： 无
 * 创建作者： Jason
 * 创建日期： 2012-10-15
 * 修改作者：
 * 修改日期：
 ******************************************************************************/
void* udpThread(void* pArgs);


/******************************************************************************
 * 函数名称： videoMonitorThread
 * 功能： 视频监控线程
 * 参数： pArgs：对象
 * 返回： 无
 * 创建作者： Jason
 * 创建日期： 2012-10-15
 * 修改作者：
 * 修改日期：
 ******************************************************************************/
void* videoMonitorThread(void* pArgs);


/******************************************************************************
 * 函数名称： SetRecogXoffset
 * 功能： 设置识别框X方向上的偏移
 * 参数： 
 * 返回： 
 * 创建作者： Jason
 * 创建日期： 2012-10-15
 * 修改作者：
 * 修改日期：
 ******************************************************************************/
void SetRecogXoffset(int iXoffset);

/******************************************************************************
 * 函数名称： SetRecogYoffset
 * 功能： 设置识别框Y方向上的偏移
 * 参数： 
 * 返回： 
 * 创建作者： Jason
 * 创建日期： 2012-10-15
 * 修改作者：
 * 修改日期：
 ******************************************************************************/
void SetRecogYoffset(int iYoffset);

#endif //__FACTORY_H__

#ifdef __cplusplus
}
#endif

#endif

